{"version":3,"file":"static/js/9459.de613cf2.chunk.js","mappings":"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","sources":["../../../../../src/composites/wui-icon-box/styles.ts","../../../../../src/composites/wui-icon-box/index.ts","../../../../../src/composites/wui-button/styles.ts","../../../../../src/composites/wui-button/index.ts","../../src/directives/ref.ts","../../../../../src/components/wui-loading-spinner/styles.ts","../../../../../src/components/wui-loading-spinner/index.ts"],"sourcesContent":[null,null,null,null,"/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n"],"names":["css","_templateObject","_taggedTemplateLiteral","WuiIconBox","LitElement","constructor","size","backgroundColor","iconColor","background","border","borderColor","icon","render","iconSize","isLg","isXl","bgMix","borderRadius","isGray","isOpaque","isColorChange","bgValueVariable","concat","style","cssText","html","styles","resetStyles","elementStyles","__decorate","property","type","Boolean","customElement","SPINNER_COLOR_BY_VARIANT","main","inverse","accent","neutral","disabled","TEXT_VARIANT_BY_SIZE","lg","md","SPINNER_SIZE_BY_SIZE","WuiButton","fullWidth","loading","variant","hasIconLeft","hasIconRight","_this$textVariant","textVariant","loadingTemplate","handleSlotLeftChange","handleSlotRightChange","color","_templateObject2","_templateObject3","e","createRef","h","o","WeakMap","n","s","i","t","update","_ref","_i$options","this","G","rt","lt","ct","ht","options","host","element","isConnected","_this$ht","globalThis","get","set","call","value","_o$get","_this$ht2","_this$G","disconnected","reconnected","WuiLoadingSpinner","dataset"],"sourceRoot":""}